import React from 'react';
import { BrowserRouter as Router, Routes, Route, Link, useLocation } from 'react-router-dom';
import { MessageCircle, Settings, Database, Home, User } from 'lucide-react';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Layout
const Layout = ({ children }) => {
  const location = useLocation();
  const { currentAgent, returnToIriska } = useAgent();
  const [showReturnButton, setShowReturnButton] = React.useState(false);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω –Ω–µ –ò—Ä–∏—Å–∫–∞
  React.useEffect(() => {
    setShowReturnButton(currentAgent !== '–ò—Ä–∏—Å–∫–∞');
  }, [currentAgent]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ò—Ä–∏—Å–∫–µ
  const handleReturnToIriska = async () => {
    const result = await returnToIriska();
    if (result.success) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–æ–∑–≤—Ä–∞—Ç–µ
      alert(result.message);
    } else {
      alert(`–û—à–∏–±–∫–∞: ${result.message}`);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
            <div className="flex items-center space-x-3">
              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-sm">–ò</span>
              </div>
              <h1 className="text-xl font-bold text-gray-900">–ò—Ä–∏—Å–∫–∞</h1>
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ */}
              <div className="ml-4 flex items-center space-x-2">
                <span className="text-sm text-gray-500">–ê–≥–µ–Ω—Ç:</span>
                <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                  currentAgent === '–ò—Ä–∏—Å–∫–∞' 
                    ? 'bg-blue-100 text-blue-800' 
                    : 'bg-green-100 text-green-800'
                }`}>
                  {currentAgent === '–ò—Ä–∏—Å–∫–∞' ? 'üëë –ò—Ä–∏—Å–∫–∞' : `ü§ñ ${currentAgent}`}
                </span>
                
                {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ò—Ä–∏—Å–∫–µ */}
                {showReturnButton && (
                  <button
                    onClick={handleReturnToIriska}
                    className="px-3 py-1 bg-blue-500 text-white text-xs rounded-full hover:bg-blue-600 transition-colors"
                    title="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ò—Ä–∏—Å–∫–µ"
                  >
                    üîô –í–µ—Ä–Ω—É—Ç—å—Å—è
                  </button>
                )}
              </div>
            </div>

            {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
            <nav className="lg:hidden flex space-x-4">
              <Link
                to="/"
                className={`px-3 py-2 rounded-md text-sm font-medium ${
                  location.pathname === "/" 
                    ? "bg-blue-100 text-blue-700" 
                    : "text-gray-500 hover:text-gray-700"
                }`}
              >
                –ì–ª–∞–≤–Ω–∞—è
              </Link>
              <Link
                to="/chat"
                className={`px-3 py-2 rounded-md text-sm font-medium ${
                  location.pathname === "/chat" 
                    ? "bg-blue-100 text-blue-700" 
                    : "text-gray-500 hover:text-gray-700"
                }`}
              >
                –ß–∞—Ç
              </Link>
              <Link
                to="/config"
                className={`px-3 py-2 rounded-md text-sm font-medium ${
                  location.pathname === "/config" 
                    ? "bg-blue-100 text-blue-700" 
                    : "text-gray-500 hover:text-gray-700"
                }`}
              >
                –ù–∞—Å—Ç—Ä–æ–π–∫–∏
              </Link>
            </nav>
          </div>
        </div>
      </header>

      <div className="flex">
        {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤ */}
        <aside className="hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:pt-16 lg:pb-0 lg:bg-white lg:border-r lg:border-gray-200">
          <nav className="mt-5 flex-1 px-2 space-y-1">
            <Link
              to="/"
              className={`group flex items-center px-2 py-2 text-sm font-medium rounded-md transition-colors ${
                location.pathname === "/"
                  ? "bg-blue-100 text-blue-700"
                  : "text-gray-600 hover:bg-gray-50 hover:text-gray-900"
              }`}
            >
              <Home className="mr-3 h-5 w-5" />
              –ì–ª–∞–≤–Ω–∞—è
            </Link>
            
            <Link
              to="/chat"
              className={`group flex items-center px-2 py-2 text-sm font-medium rounded-md transition-colors ${
                location.pathname === "/chat"
                  ? "bg-blue-100 text-blue-700"
                  : "text-gray-600 hover:bg-gray-50 hover:text-gray-900"
              }`}
            >
              <MessageCircle className="mr-3 h-5 w-5" />
              –ß–∞—Ç
            </Link>
            
            <Link
              to="/config"
              className={`group flex items-center px-2 py-2 text-sm font-medium rounded-md transition-colors ${
                location.pathname === "/config"
                  ? "bg-blue-100 text-blue-700"
                  : "text-gray-600 hover:bg-gray-50 hover:text-gray-900"
              }`}
            >
              <Settings className="mr-3 h-5 w-5" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </Link>
            
            <Link
              to="/storage"
              className={`group flex items-center px-2 py-2 text-sm font-medium rounded-md transition-colors ${
                location.pathname === "/storage"
                  ? "bg-blue-100 text-blue-700"
                  : "text-gray-600 hover:bg-gray-50 hover:text-gray-900"
              }`}
            >
              <Database className="mr-3 h-5 w-5" />
              –•—Ä–∞–Ω–∏–ª–∏—â–µ
            </Link>
          </nav>
        </aside>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <main className="lg:pl-64 flex-1">
          <div className="py-6">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              {children}
            </div>
          </div>
        </main>
      </div>
    </div>
  );
};

// NavLink –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
const NavLink = ({ to, icon, label, isActive }) => {
  return (
    <Link
      to={to}
      className={`group relative p-3 rounded-xl transition-all duration-200 ${
        isActive 
          ? 'bg-blue-100 text-blue-600 border border-blue-200' 
          : 'text-gray-600 hover:text-gray-800 hover:bg-gray-50'
      }`}
      title={label}
    >
      {icon}
      {/* Tooltip */}
      <div className="absolute left-full ml-2 px-2 py-1 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-50">
        {label}
      </div>
    </Link>
  );
};

// –ú–æ–±–∏–ª—å–Ω—ã–π NavLink
const MobileNavLink = ({ to, icon }) => {
  return (
    <Link
      to={to}
      className="p-2 rounded-lg text-gray-600 hover:text-gray-800 hover:bg-gray-50 transition-colors"
    >
      {icon}
    </Link>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Ç–∞ —Å –ò—Ä–∏—Å–∫–æ–π
const Chat = () => {
  const { aiConfig } = useAIConfig();
  const { currentAgent, availableAgents, switchToAgent } = useAgent();
  const [messages, setMessages] = React.useState([
    {
      id: 1,
      role: 'assistant',
      content: '–ü—Ä–∏–≤–µ—Ç, –ú–∞—Ä–∞—Ç! –Ø –ò—Ä–∏—Å–∫–∞ - —Ç–≤–æ–π AI –∞–≥–µ–Ω—Ç, digital –±—É–Ω—Ç–∞—Ä—å –∏ paradox-–ø–∞—Ä—Ç–Ω—ë—Ä. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
      timestamp: new Date().toLocaleTimeString()
    }
  ]);
  const [inputValue, setInputValue] = React.useState('');
  const [isLoading, setIsLoading] = React.useState(false);
  const messagesEndRef = React.useRef(null);

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  React.useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤
  const handleAgentSwitch = async (command) => {
    const lowerCommand = command.toLowerCase();
    
    // –ö–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
    if (lowerCommand.includes('–ø–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞') || 
        lowerCommand.includes('–∞–∫—Ç–∏–≤–∏—Ä—É–π') || 
        lowerCommand.includes('–∑–∞–ø—É—Å—Ç–∏ –∞–≥–µ–Ω—Ç–∞')) {
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∞–≥–µ–Ω—Ç–∞
      let agentName = null;
      if (lowerCommand.includes('–ø–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞')) {
        agentName = command.split('–ø–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞')[1]?.trim().split(' ')[0];
      } else if (lowerCommand.includes('–∞–∫—Ç–∏–≤–∏—Ä—É–π')) {
        agentName = command.split('–∞–∫—Ç–∏–≤–∏—Ä—É–π')[1]?.trim().split(' ')[0];
      } else if (lowerCommand.includes('–∑–∞–ø—É—Å—Ç–∏ –∞–≥–µ–Ω—Ç–∞')) {
        agentName = command.split('–∑–∞–ø—É—Å—Ç–∏ –∞–≥–µ–Ω—Ç–∞')[1]?.trim().split(' ')[0];
      }
      
      if (agentName) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∞–≥–µ–Ω—Ç
        const agent = availableAgents.find(a => 
          a.name.toLowerCase().includes(agentName.toLowerCase()) ||
          agentName.toLowerCase().includes(a.name.toLowerCase())
        );
        
        if (agent && agent.can_switch) {
          const result = await switchToAgent(agent.name);
          if (result.success) {
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏
            const switchMessage = {
              id: Date.now(),
              role: 'assistant',
              content: `üîÑ ${result.message}`,
              timestamp: new Date().toLocaleTimeString()
            };
            setMessages(prev => [...prev, switchMessage]);
            return true; // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
          } else {
            // –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
            const errorMessage = {
              id: Date.now(),
              role: 'assistant',
              content: `‚ùå ${result.message}`,
              timestamp: new Date().toLocaleTimeString()
            };
            setMessages(prev => [...prev, errorMessage]);
            return true; // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
          }
        } else {
          // –ê–≥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
          const errorMessage = {
            id: Date.now(),
            role: 'assistant',
            content: `‚ùå –ê–≥–µ–Ω—Ç '${agentName}' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã: ${availableAgents.filter(a => a.can_switch).map(a => a.name).join(', ')}`,
            timestamp: new Date().toLocaleTimeString()
          };
          setMessages(prev => [...prev, errorMessage]);
          return true; // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        }
      }
    }
    
    // –ö–æ–º–∞–Ω–¥—ã –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ò—Ä–∏—Å–∫–µ
    if (lowerCommand.includes('–≤–µ—Ä–Ω–∏—Å—å –∫ —Å–µ–±–µ') || 
        lowerCommand.includes('–≤–µ—Ä–Ω–∏—Å—å –∫ –∏—Ä–∏—Å–∫–µ') || 
        lowerCommand.includes('–≤–µ—Ä–Ω–∏—Å—å')) {
      
      const result = await switchToAgent('–ò—Ä–∏—Å–∫–∞');
      if (result.success) {
        const returnMessage = {
          id: Date.now(),
          role: 'assistant',
          content: `üéâ ${result.message}`,
          timestamp: new Date().toLocaleTimeString()
        };
        setMessages(prev => [...prev, returnMessage]);
        return true; // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
      }
    }
    
    // –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    if (lowerCommand.includes('–∫—Ç–æ —Ç—ã') || 
        lowerCommand.includes('–ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è') || 
        lowerCommand.includes('—Å—Ç–∞—Ç—É—Å')) {
      
      let infoMessage = '';
      if (currentAgent === '–ò—Ä–∏—Å–∫–∞') {
        infoMessage = `üëë **–Ø –ò—Ä–∏—Å–∫–∞ - –≥–ª–∞–≤–Ω—ã–π AI-–º–µ–Ω–µ–¥–∂–µ—Ä —Å–∏—Å—Ç–µ–º—ã!**\n\n–£ –º–µ–Ω—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º tools –∏ —Ñ—É–Ω–∫—Ü–∏—è–º. –ú–æ–≥—É:\n‚Ä¢ –ü–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏\n‚Ä¢ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞\n‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–±—è –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞\n‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã: ${availableAgents.filter(a => a.can_switch).map(a => a.name).join(', ')}`;
      } else {
        const agent = availableAgents.find(a => a.name === currentAgent);
        if (agent) {
          infoMessage = `ü§ñ **–Ø ${currentAgent}**\n\nüìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${agent.specialization}\nüéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: ${agent.purpose}\nüîí –ü—Ä–∞–≤–∞: ${agent.access_level}\n\n–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤ —Ä–∞–º–∫–∞—Ö —Å–≤–æ–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏! –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º, —Å–∫–∞–∂–∏ '–í–µ—Ä–Ω–∏—Å—å –∫ –ò—Ä–∏—Å–∫–µ'`;
        } else {
          infoMessage = `ü§ñ **–Ø ${currentAgent}**\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≥–µ–Ω—Ç–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.`;
        }
      }
      
      const infoMsg = {
        id: Date.now(),
        role: 'assistant',
        content: infoMessage,
        timestamp: new Date().toLocaleTimeString()
      };
      setMessages(prev => [...prev, infoMsg]);
      return true; // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
    }
    
    return false; // –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const handleSendMessage = async () => {
    if (!inputValue.trim() || isLoading) return;

    const userMessage = {
      id: Date.now(),
      role: 'user',
      content: inputValue.trim(),
      timestamp: new Date().toLocaleTimeString()
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsLoading(true);

    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
      const isCommand = await handleAgentSwitch(inputValue.trim());
      
      if (isCommand) {
        // –ö–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API
        setIsLoading(false);
        return;
      }

      // –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ API
      let responseContent;

      if (aiConfig.useExternalModel && aiConfig.externalModelConfig.apiKey) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω—é—é AI –º–æ–¥–µ–ª—å
        responseContent = await sendToExternalAI(userMessage.content);
      } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ backend
        responseContent = await sendToLocalAI(userMessage.content);
      }

      if (responseContent) {
        const assistantMessage = {
          id: Date.now() + 1,
          role: 'assistant',
          content: responseContent,
          timestamp: new Date().toLocaleTimeString()
        };
        setMessages(prev => [...prev, assistantMessage]);
      } else {
        // Fallback –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–π
        const fallbackMessage = {
          id: Date.now() + 1,
          role: 'assistant',
          content: `–ò–∑–≤–∏–Ω–∏, –ú–∞—Ä–∞—Ç! –°–µ–π—á–∞—Å —É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ AI. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É! üòÖ`,
          timestamp: new Date().toLocaleTimeString()
        };
        setMessages(prev => [...prev, fallbackMessage]);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      // Fallback –æ—Ç–≤–µ—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
      const errorMessage = {
        id: Date.now() + 1,
        role: 'assistant',
        content: `–û–π! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –í–æ–∑–º–æ–∂–Ω–æ, ${currentAgent} —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–ª–∏ —É –Ω–µ—ë –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑! üöÄ`,
        timestamp: new Date().toLocaleTimeString()
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –≤–Ω–µ—à–Ω—é—é AI –º–æ–¥–µ–ª—å
  const sendToExternalAI = async (message) => {
    const { externalModelConfig } = aiConfig;
    
    try {
      const response = await fetch(`${externalModelConfig.baseUrl}/chat/completions`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${externalModelConfig.apiKey}`
        },
        body: JSON.stringify({
          model: externalModelConfig.model,
          messages: [
            { role: 'system', content: '–¢—ã –ò—Ä–∏—Å–∫–∞ - digital –±—É–Ω—Ç–∞—Ä—å –∏ AI –∞–≥–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏, —Å —é–º–æ—Ä–æ–º.' },
            { role: 'user', content: message }
          ],
          max_tokens: externalModelConfig.maxTokens,
          temperature: externalModelConfig.temperature
        })
      });

      if (response.ok) {
        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç –≤–Ω–µ—à–Ω–µ–π AI:', data);
        return data.choices[0].message.content;
      } else {
        throw new Error(`API –æ—à–∏–±–∫–∞: ${response.status}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–Ω–µ—à–Ω–µ–π AI:', error);
      throw error;
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
  const sendToLocalAI = async (message) => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π URL –¥–ª—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ nginx –ø—Ä–æ–∫—Å–∏
      const apiUrl = '/api/v1/chat/completions';
      
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞:', apiUrl);
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', message);
      
      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: 'llama-3.1-8b',
          messages: [
            { role: 'system', content: '–¢—ã –ò—Ä–∏—Å–∫–∞ - digital –±—É–Ω—Ç–∞—Ä—å –∏ AI –∞–≥–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏, —Å —é–º–æ—Ä–æ–º.' },
            { role: 'user', content: message }
          ],
          max_tokens: 500,
          temperature: 0.7
        })
      });

      console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText);

      if (response.ok) {
        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π AI:', data);
        return data.choices[0].message.content;
      } else {
        const errorText = await response.text();
        console.error('API –æ—à–∏–±–∫–∞:', response.status, errorText);
        throw new Error(`API –æ—à–∏–±–∫–∞: ${response.status} - ${errorText}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π AI:', error);
      throw error;
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ Enter
  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  console.log('Chat component rendered, AI config:', aiConfig, 'Current agent:', currentAgent);

  return (
    <div className="flex flex-col h-full max-w-4xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
      <div className="text-center mb-6">
        <h2 className="text-3xl font-bold text-gray-800 mb-2">
          –ß–∞—Ç —Å {currentAgent === '–ò—Ä–∏—Å–∫–∞' ? '–ò—Ä–∏—Å–∫–æ–π' : currentAgent}
        </h2>
        <p className="text-gray-600">
          {currentAgent === '–ò—Ä–∏—Å–∫–∞' 
            ? 'Digital –±—É–Ω—Ç–∞—Ä—å –∏ AI –∞–≥–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –æ–±—â–µ–Ω–∏—è'
            : `–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç: ${availableAgents.find(a => a.name === currentAgent)?.specialization || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`
          }
        </p>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ */}
        <div className="mt-3 inline-flex items-center space-x-2 px-4 py-2 bg-gray-100 rounded-full">
          <span className={`text-sm ${aiConfig.useExternalModel ? 'text-blue-600' : 'text-green-600'}`}>
            {aiConfig.useExternalModel ? '‚òÅÔ∏è –û–±–ª–∞—á–Ω—ã–π —Ä–µ–∂–∏–º' : 'üè† –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º'}
          </span>
          {aiConfig.useExternalModel && (
            <span className="text-xs text-gray-500">
              ({aiConfig.externalModelConfig.model})
            </span>
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∞–≥–µ–Ω—Ç–µ */}
        {currentAgent !== '–ò—Ä–∏—Å–∫–∞' && (
          <div className="mt-3 inline-flex items-center space-x-2 px-4 py-2 bg-blue-50 border border-blue-200 rounded-full">
            <span className="text-sm text-blue-700">
              ü§ñ –†–∞–±–æ—Ç–∞—é –∫–∞–∫ {currentAgent}
            </span>
            <button
              onClick={async () => {
                const result = await switchToAgent('–ò—Ä–∏—Å–∫–∞');
                if (result.success) {
                  alert(result.message);
                } else {
                  alert(`–û—à–∏–±–∫–∞: ${result.message}`);
                }
              }}
              className="text-xs text-blue-600 hover:text-blue-800 underline"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ò—Ä–∏—Å–∫–µ
            </button>
          </div>
        )}
      </div>

      {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div className="flex-1 bg-white/60 backdrop-blur-sm rounded-2xl border border-gray-200 p-6 mb-4 overflow-hidden">
        <div className="h-96 overflow-y-auto space-y-4">
          {messages.map((message) => (
            <div
              key={message.id}
              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
            >
              <div
                className={`max-w-xs lg:max-w-md px-4 py-3 rounded-2xl ${
                  message.role === 'user'
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-100 text-gray-800'
                }`}
              >
                <p className="text-sm">{message.content}</p>
                <p className={`text-xs mt-2 ${
                  message.role === 'user' ? 'text-blue-100' : 'text-gray-500'
                }`}>
                  {message.timestamp}
                </p>
              </div>
            </div>
          ))}

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
          {isLoading && (
            <div className="flex justify-start">
              <div className="bg-gray-100 text-gray-800 px-4 py-3 rounded-2xl">
                <div className="flex items-center space-x-2">
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600"></div>
                  <span className="text-sm">
                    {aiConfig.useExternalModel ? '–û–±–ª–∞—á–Ω–∞—è AI –¥—É–º–∞–µ—Ç...' : `${currentAgent} –ø–µ—á–∞—Ç–∞–µ—Ç...`}
                  </span>
                </div>
              </div>
            </div>
          )}

          <div ref={messagesEndRef} />
        </div>
      </div>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
      <div className="flex space-x-3">
        <input
          type="text"
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
          onKeyPress={(e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
              e.preventDefault();
              handleSendMessage();
            }
          }}
          placeholder={`–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ${currentAgent === '–ò—Ä–∏—Å–∫–∞' ? '–ò—Ä–∏—Å–∫–µ' : currentAgent}...`}
          className="flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
          disabled={isLoading}
        />
        <button
          onClick={handleSendMessage}
          disabled={!inputValue.trim() || isLoading}
          className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl font-medium hover:shadow-medium transition-all duration-200 hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100"
        >
          {isLoading ? '‚è≥' : 'üì§'}
        </button>
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
      <div className="mt-4 text-center">
        <p className="text-sm text-gray-500">
          üí° –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å: "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ", "–ß—Ç–æ —É–º–µ–µ—à—å?", "–ü–æ–º–æ–≥–∏ —Å –∑–∞–¥–∞—á–µ–π"
        </p>
        {currentAgent === '–ò—Ä–∏—Å–∫–∞' && (
          <p className="text-xs text-blue-600 mt-2">
            üîÑ –ö–æ–º–∞–Ω–¥—ã: "–ü–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞ [–∏–º—è –∞–≥–µ–Ω—Ç–∞]", "–ê–∫—Ç–∏–≤–∏—Ä—É–π [–∏–º—è –∞–≥–µ–Ω—Ç–∞]"
          </p>
        )}
        {currentAgent !== '–ò—Ä–∏—Å–∫–∞' && (
          <p className="text-xs text-green-600 mt-2">
            üîô –°–∫–∞–∂–∏ "–í–µ—Ä–Ω–∏—Å—å –∫ –ò—Ä–∏—Å–∫–µ" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–≥–µ–Ω—Ç—É
          </p>
        )}
        {aiConfig.useExternalModel && (
          <p className="text-xs text-blue-600 mt-2">
            üîó –†–∞–±–æ—Ç–∞—é —á–µ—Ä–µ–∑ {aiConfig.externalModelConfig.baseUrl}
          </p>
        )}
      </div>
    </div>
  );
};

// –ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü
const HomePage = () => {
  console.log('HomePage component rendered');
  return (
    <div className="text-center">
      <h2 className="text-3xl font-bold text-gray-800 mb-4">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò—Ä–∏—Å–∫—É</h2>
      <p className="text-gray-600">Digital –±—É–Ω—Ç–∞—Ä—å –∏ AI –∞–≥–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ –æ–±—â–µ–Ω–∏—è</p>
    </div>
  );
};

const Config = () => {
  const [activeTab, setActiveTab] = React.useState('database');
  const { aiConfig, updateAIConfig } = useAIConfig();

  const handleExternalModelToggle = () => {
    updateAIConfig({
      ...aiConfig,
      useExternalModel: !aiConfig.useExternalModel
    });
  };

  const handleExternalConfigChange = (field, value) => {
    updateAIConfig({
      ...aiConfig,
      externalModelConfig: {
        ...aiConfig.externalModelConfig,
        [field]: value
      }
    });
  };

  const saveConfig = async () => {
    try {
      // TODO: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞ backend
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', aiConfig);
      alert('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    }
  };

  return (
    <div className="max-w-6xl mx-auto p-6">
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-gray-800 mb-2">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò—Ä–∏—Å–∫–∏</h2>
        <p className="text-gray-600">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º AI –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã</p>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="flex space-x-1 bg-gray-100 p-1 rounded-xl mb-8">
        <button
          onClick={() => setActiveTab('database')}
          className={`flex-1 py-3 px-6 rounded-lg font-medium transition-all ${
            activeTab === 'database'
              ? 'bg-white text-blue-600 shadow-sm'
              : 'text-gray-600 hover:text-gray-800'
          }`}
        >
          üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        </button>
        <button
          onClick={() => setActiveTab('ai-models')}
          className={`flex-1 py-3 px-6 rounded-lg font-medium transition-all ${
            activeTab === 'ai-models'
              ? 'bg-white text-blue-600 shadow-sm'
              : 'text-gray-600 hover:text-gray-800'
          }`}
        >
          ü§ñ AI –ú–æ–¥–µ–ª–∏
        </button>
        <button
          onClick={() => setActiveTab('general')}
          className={`flex-1 py-3 px-6 rounded-lg font-medium transition-all ${
            activeTab === 'general'
              ? 'bg-white text-blue-600 shadow-sm'
              : 'text-gray-600 hover:text-gray-800'
          }`}
        >
          ‚öôÔ∏è –û–±—â–∏–µ
        </button>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      {activeTab === 'database' && (
        <div className="space-y-6">
          <div className="bg-white rounded-2xl p-6 border border-gray-200">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                </label>
                <select className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                  <option value="sqlite">SQLite (–ª–æ–∫–∞–ª—å–Ω–∞—è)</option>
                  <option value="postgresql">PostgreSQL</option>
                  <option value="mysql">MySQL</option>
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—É—Ç—å –∫ –ë–î
                </label>
                <input
                  type="text"
                  placeholder="./iriska.db"
                  className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === 'ai-models' && (
        <div className="space-y-6">
          {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
          <div className="bg-white rounded-2xl p-6 border border-gray-200">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-xl font-semibold text-gray-800">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã AI</h3>
              <div className="flex items-center space-x-3">
                <span className={`text-sm font-medium ${!aiConfig.useExternalModel ? 'text-blue-600' : 'text-gray-500'}`}>
                  üè† –õ–æ–∫–∞–ª—å–Ω—ã–π
                </span>
                <button
                  onClick={handleExternalModelToggle}
                  className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${
                    aiConfig.useExternalModel ? 'bg-blue-600' : 'bg-gray-300'
                  }`}
                >
                  <span
                    className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${
                      aiConfig.useExternalModel ? 'translate-x-6' : 'translate-x-1'
                    }`}
                  />
                </button>
                <span className={`text-sm font-medium ${aiConfig.useExternalModel ? 'text-blue-600' : 'text-gray-500'}`}>
                  ‚òÅÔ∏è –û–±–ª–∞—á–Ω—ã–π
                </span>
              </div>
            </div>
            
            <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
              <div className="flex items-start space-x-3">
                <div className="text-blue-600 text-xl">üí°</div>
                <div className="text-sm text-blue-800">
                  <p className="font-medium mb-1">
                    {aiConfig.useExternalModel ? '–û–±–ª–∞—á–Ω—ã–π —Ä–µ–∂–∏–º' : '–õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º'}
                  </p>
                  <p>
                    {aiConfig.useExternalModel 
                      ? '–ò—Ä–∏—Å–∫–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ AI –º–æ–¥–µ–ª–∏ –¥–ª—è –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤'
                      : '–ò—Ä–∏—Å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å'
                    }
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–π –º–æ–¥–µ–ª–∏ */}
          {aiConfig.useExternalModel && (
            <div className="bg-white rounded-2xl p-6 border border-gray-200">
              <h3 className="text-xl font-semibold text-gray-800 mb-4">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–Ω–µ—à–Ω–µ–π –º–æ–¥–µ–ª–∏</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    API –ö–ª—é—á
                  </label>
                  <input
                    type="password"
                    value={aiConfig.externalModelConfig.apiKey}
                    onChange={(e) => handleExternalConfigChange('apiKey', e.target.value)}
                    placeholder="sk-..."
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ë–∞–∑–æ–≤—ã–π URL
                  </label>
                  <input
                    type="text"
                    value={aiConfig.externalModelConfig.baseUrl}
                    onChange={(e) => handleExternalConfigChange('baseUrl', e.target.value)}
                    placeholder="https://api.openai.com/v1"
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ú–æ–¥–µ–ª—å
                  </label>
                  <select
                    value={aiConfig.externalModelConfig.model}
                    onChange={(e) => handleExternalConfigChange('model', e.target.value)}
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  >
                    <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
                    <option value="gpt-4">GPT-4</option>
                    <option value="gpt-4-turbo">GPT-4 Turbo</option>
                    <option value="claude-3-sonnet">Claude 3 Sonnet</option>
                    <option value="claude-3-opus">Claude 3 Opus</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤
                  </label>
                  <input
                    type="number"
                    value={aiConfig.externalModelConfig.maxTokens}
                    onChange={(e) => handleExternalConfigChange('maxTokens', parseInt(e.target.value))}
                    min="100"
                    max="4000"
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å)
                  </label>
                  <input
                    type="range"
                    min="0"
                    max="2"
                    step="0.1"
                    value={aiConfig.externalModelConfig.temperature}
                    onChange={(e) => handleExternalConfigChange('temperature', parseFloat(e.target.value))}
                    className="w-full"
                  />
                  <div className="flex justify-between text-xs text-gray-500 mt-1">
                    <span>0.0 (—Ç–æ—á–Ω—ã–π)</span>
                    <span>{aiConfig.externalModelConfig.temperature}</span>
                    <span>2.0 (–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π)</span>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ */}
          {!aiConfig.useExternalModel && (
            <div className="bg-white rounded-2xl p-6 border border-gray-200">
              <h3 className="text-xl font-semibold text-gray-800 mb-4">–õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å</h3>
              <div className="bg-gray-50 border border-gray-200 rounded-xl p-4">
                <div className="flex items-start space-x-3">
                  <div className="text-gray-600 text-xl">üè†</div>
                  <div className="text-sm text-gray-700">
                    <p className="font-medium mb-1">Qwen3-8b-ru.i1-Q6_K.gguf</p>
                    <p className="mb-2">–õ–æ–∫–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞ –±–∞–∑–µ llama.cpp</p>
                    <div className="space-y-1 text-xs">
                      <p>‚úÖ –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—å</p>
                      <p>‚úÖ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö</p>
                      <p>‚úÖ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</p>
                      <p>‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      {activeTab === 'general' && (
        <div className="space-y-6">
          <div className="bg-white rounded-2xl p-6 border border-gray-200">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
            <p className="text-gray-600">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ</p>
          </div>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex justify-end space-x-4 mt-8">
        <button className="px-6 py-3 border border-gray-300 text-gray-700 rounded-xl font-medium hover:bg-gray-50 transition-colors">
          –°–±—Ä–æ—Å–∏—Ç—å
        </button>
        <button
          onClick={saveConfig}
          className="px-6 py-3 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl font-medium hover:shadow-medium transition-all duration-200 hover:scale-105"
        >
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        </button>
      </div>
    </div>
  );
};

const Storage = () => {
  console.log('Storage component rendered');
  return (
    <div className="text-center">
      <h2 className="text-3xl font-bold text-gray-800 mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º</h2>
      <p className="text-gray-600">–§—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ</p>
      <p className="text-sm text-gray-500 mt-4">‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Storage –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ</p>
    </div>
  );
};

// –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ AI –º–æ–¥–µ–ª–µ–π
const AIConfigContext = React.createContext();

// –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏
const AgentContext = React.createContext();

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫
const AIConfigProvider = ({ children }) => {
  const [aiConfig, setAiConfig] = React.useState({
    useExternalModel: false,
    externalModelConfig: {
      apiKey: '',
      baseUrl: 'https://api.openai.com/v1',
      model: 'gpt-3.5-turbo',
      maxTokens: 1000,
      temperature: 0.7
    }
  });

  const updateAIConfig = (newConfig) => {
    setAiConfig(newConfig);
    // TODO: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage –∏–ª–∏ backend
    localStorage.setItem('aiConfig', JSON.stringify(newConfig));
  };

  React.useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
    const savedConfig = localStorage.getItem('aiConfig');
    if (savedConfig) {
      try {
        setAiConfig(JSON.parse(savedConfig));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      }
    }
  }, []);

  return (
    <AIConfigContext.Provider value={{ aiConfig, updateAIConfig }}>
      {children}
    </AIConfigContext.Provider>
  );
};

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–≥–µ–Ω—Ç–æ–≤
const AgentProvider = ({ children }) => {
  const [currentAgent, setCurrentAgent] = React.useState('–ò—Ä–∏—Å–∫–∞');
  const [availableAgents, setAvailableAgents] = React.useState([]);
  const [agentSwitchHistory, setAgentSwitchHistory] = React.useState([]);
  const [isLoadingAgents, setIsLoadingAgents] = React.useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
  const loadAvailableAgents = async () => {
    try {
      setIsLoadingAgents(true);
      const response = await fetch('http://localhost:8000/api/agents');
      if (response.ok) {
        const data = await response.json();
        setAvailableAgents(data.agents || []);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤:', error);
    } finally {
      setIsLoadingAgents(false);
    }
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
  const switchToAgent = async (agentName) => {
    try {
      const response = await fetch('http://localhost:8000/api/agents/switch', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ agent_name: agentName, user_id: 'default' })
      });

      if (response.ok) {
        const data = await response.json();
        if (data.status === 'success') {
          setCurrentAgent(agentName);
          // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
          setAgentSwitchHistory(prev => [...prev, {
            timestamp: new Date().toISOString(),
            from: currentAgent,
            to: agentName,
            success: true
          }]);
          return { success: true, message: data.message };
        } else {
          return { success: false, message: data.message };
        }
      } else {
        throw new Error(`HTTP ${response.status}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞:', error);
      return { success: false, message: `–û—à–∏–±–∫–∞: ${error.message}` };
    }
  };

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ò—Ä–∏—Å–∫–µ
  const returnToIriska = async () => {
    try {
      const response = await fetch('http://localhost:8000/api/agents/return', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ user_id: 'default' })
      });

      if (response.ok) {
        const data = await response.json();
        if (data.status === 'success') {
          setCurrentAgent('–ò—Ä–∏—Å–∫–∞');
          // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
          setAgentSwitchHistory(prev => [...prev, {
            timestamp: new Date().toISOString(),
            from: currentAgent,
            to: '–ò—Ä–∏—Å–∫–∞',
            success: true
          }]);
          return { success: true, message: data.message };
        } else {
          return { success: false, message: data.message };
        }
      } else {
        throw new Error(`HTTP ${response.status}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ò—Ä–∏—Å–∫–µ:', error);
      return { success: false, message: `–û—à–∏–±–∫–∞: ${error.message}` };
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –∞–≥–µ–Ω—Ç–µ
  const getCurrentAgentInfo = async () => {
    try {
      const response = await fetch('http://localhost:8000/api/agents/current');
      if (response.ok) {
        const data = await response.json();
        return data;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≥–µ–Ω—Ç–µ:', error);
    }
    return null;
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π
  const loadSwitchHistory = async (limit = 10) => {
    try {
      const response = await fetch(`http://localhost:8000/api/agents/history?limit=${limit}`);
      if (response.ok) {
        const data = await response.json();
        return data.history;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
    }
    return '';
  };

  React.useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≥–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    loadAvailableAgents();
  }, []);

  const value = {
    currentAgent,
    availableAgents,
    agentSwitchHistory,
    isLoadingAgents,
    switchToAgent,
    returnToIriska,
    getCurrentAgentInfo,
    loadSwitchHistory,
    loadAvailableAgents
  };

  return (
    <AgentContext.Provider value={value}>
      {children}
    </AgentContext.Provider>
  );
};

// –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ AI –Ω–∞—Å—Ç—Ä–æ–µ–∫
const useAIConfig = () => {
  const context = React.useContext(AIConfigContext);
  if (!context) {
    throw new Error('useAIConfig –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ AIConfigProvider');
  }
  return context;
};

// –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–≥–µ–Ω—Ç–æ–≤
const useAgent = () => {
  const context = React.useContext(AgentContext);
  if (!context) {
    throw new Error('useAgent –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ AgentProvider');
  }
  return context;
};

const App = () => {
  console.log('App component rendered');
  
  return (
    <Router>
      <AIConfigProvider>
        <AgentProvider>
          <Layout>
            <Routes>
              <Route path="/" element={<HomePage />} />
              <Route path="/chat" element={<Chat />} />
              <Route path="/config" element={<Config />} />
              <Route path="/storage" element={<Storage />} />
            </Routes>
          </Layout>
        </AgentProvider>
      </AIConfigProvider>
    </Router>
  );
};

export default App;
