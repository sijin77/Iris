"""
Tools –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏.
–ò—Ä–∏—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç–∏ tools –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤.
"""

import json
import logging
from datetime import datetime
from typing import Dict, List, Optional, Any
from pydantic import BaseModel, Field

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from agent.models import (
    SessionLocal, AgentProfile, AgentActivity, AgentContext,
    get_agent_profile_by_name, get_all_active_agents, get_agent_templates,
    update_agent_status
)

logger = logging.getLogger(__name__)

# ============================================================================
# PYDANTIC –ú–û–î–ï–õ–ò –î–õ–Ø –í–ê–õ–ò–î–ê–¶–ò–ò –î–ê–ù–ù–´–•
# ============================================================================

class CreateAgentRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞"""
    name: str = Field(..., description="–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∞–≥–µ–Ω—Ç–∞")
    specialization: str = Field(..., description="–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞ (–∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –∫—Ä–µ–∞—Ç–∏–≤, –ø–æ–º–æ—â—å)")
    purpose: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞")
    system_prompt: str = Field(..., description="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è LLM")
    personality_traits: List[str] = Field(default=[], description="–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞")
    tone: str = Field(default="friendly", description="–¢–æ–Ω –æ–±—â–µ–Ω–∏—è")
    communication_style: str = Field(default="", description="–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è")
    safety_rules: str = Field(default="", description="–ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    allowed_tools: List[str] = Field(default=[], description="–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ tools")
    restricted_actions: str = Field(default="", description="–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    max_tokens: int = Field(default=1000, description="–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤")
    temperature: str = Field(default="0.7", description="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å)")
    tags: List[str] = Field(default=[], description="–¢–µ–≥–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏")
    description: str = Field(default="", description="–û–ø–∏—Å–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞")
    notes: str = Field(default="", description="–ó–∞–º–µ—Ç–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏")

class AgentStatusResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ –∞–≥–µ–Ω—Ç–∞"""
    name: str
    status: str
    current_user_id: Optional[str]
    last_activated: Optional[str]
    messages_processed: int
    tokens_used: int
    current_context: Optional[str]
    last_error: Optional[str]

class AgentListResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–≥–µ–Ω—Ç–æ–≤"""
    agents: List[Dict[str, Any]]
    total_count: int
    active_count: int
    template_count: int

# ============================================================================
# TOOLS –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–ì–ï–ù–¢–ê–ú–ò
# ============================================================================

def create_agent_profile(
    name: str,
    specialization: str,
    purpose: str,
    system_prompt: str,
    personality_traits: Optional[List[str]] = None,
    tone: str = "friendly",
    communication_style: str = "",
    safety_rules: str = "",
    allowed_tools: Optional[List[str]] = None,
    restricted_actions: str = "",
    max_tokens: int = 1000,
    temperature: str = "0.7",
    tags: Optional[List[str]] = None,
    description: str = "",
    notes: str = ""
) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.
    
    –≠—Ç–æ—Ç tool –ø–æ–∑–≤–æ–ª—è–µ—Ç –ò—Ä–∏—Å–∫–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á.
    –ö–∞–∂–¥—ã–π –∞–≥–µ–Ω—Ç –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.
    
    Args:
        name: –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∞–≥–µ–Ω—Ç–∞
        specialization: –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –∫—Ä–µ–∞—Ç–∏–≤, –ø–æ–º–æ—â—å)
        purpose: –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        system_prompt: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è LLM
        personality_traits: –ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞
        tone: –¢–æ–Ω –æ–±—â–µ–Ω–∏—è
        communication_style: –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
        safety_rules: –ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        allowed_tools: –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ tools
        restricted_actions: –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        max_tokens: –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤
        temperature: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å)
        tags: –¢–µ–≥–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏
        description: –û–ø–∏—Å–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
        notes: –ó–∞–º–µ—Ç–∫–∏
        
    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
        
    Example:
        create_agent_profile(
            name="DataAnalyst",
            specialization="–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
            purpose="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ",
            system_prompt="–¢—ã –∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö...",
            personality_traits=["–ª–æ–≥–∏—á–Ω—ã–π", "—Ç–æ—á–Ω—ã–π"],
            allowed_tools=["data_analysis", "statistics"]
        )
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–≥–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        existing_agent = get_agent_profile_by_name(name)
        if existing_agent:
            return f"‚ùå –ê–≥–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if personality_traits is None:
            personality_traits = []
        if allowed_tools is None:
            allowed_tools = []
        if tags is None:
            tags = []
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∞–≥–µ–Ω—Ç–∞
        new_agent = AgentProfile(
            name=name,
            created_by="–ò—Ä–∏—Å–∫–∞",  # –ò—Ä–∏—Å–∫–∞ —Å–æ–∑–¥–∞–µ—Ç –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
            status="active",  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–∫—Ç–∏–≤–µ–Ω
            access_level="restricted",  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞
            is_main_agent=False,  # –ù–µ –≥–ª–∞–≤–Ω—ã–π –∞–≥–µ–Ω—Ç
            specialization=specialization,
            purpose=purpose,
            system_prompt=system_prompt,
            personality_traits=json.dumps(personality_traits, ensure_ascii=False),
            tone=tone,
            communication_style=communication_style,
            safety_rules=safety_rules,
            allowed_tools=json.dumps(allowed_tools, ensure_ascii=False),
            restricted_actions=restricted_actions,
            generation_settings=json.dumps({
                "model": "default",
                "max_tokens": max_tokens,
                "temperature": temperature
            }, ensure_ascii=False),
            max_tokens=max_tokens,
            temperature=temperature,
            version="1.0.0",
            is_template=False,
            tags=json.dumps(tags, ensure_ascii=False),
            description=description,
            notes=notes
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        with SessionLocal() as session:
            session.add(new_agent)
            session.commit()
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
            activity = AgentActivity(
                agent_name=name,
                current_status="inactive",  # –ü–æ–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
                last_heartbeat=datetime.utcnow()
            )
            session.add(activity)
            session.commit()
        
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–≥–µ–Ω—Ç: {name} ({specialization})")
        return f"üéâ –ê–≥–µ–Ω—Ç '{name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\nüìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {specialization}\nüéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {purpose}\nüîí –ü—Ä–∞–≤–∞: –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ\nüìä –°—Ç–∞—Ç—É—Å: –∞–∫—Ç–∏–≤–µ–Ω"
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ '{name}': {str(e)}"
        logger.error(error_msg)
        return error_msg

def activate_agent(agent_name: str, user_id: str = "default") -> str:
    """
    –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    
    –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞:
    - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    - –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –∞–≥–µ–Ω—Ç
    - –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    
    Args:
        agent_name: –ò–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        
    Example:
        activate_agent("DataAnalyst", "user123")
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
        agent = get_agent_profile_by_name(agent_name)
        if not agent:
            return f"‚ùå –ê–≥–µ–Ω—Ç '{agent_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞
        if agent.status != "active":
            return f"‚ùå –ê–≥–µ–Ω—Ç '{agent_name}' –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω (—Å—Ç–∞—Ç—É—Å: {agent.status})"
        
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            activity = session.query(AgentActivity).filter_by(agent_name=agent_name).first()
            if not activity:
                activity = AgentActivity(agent_name=agent_name)
                session.add(activity)
            
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
            activity.current_status = "active"
            activity.current_user_id = user_id
            activity.activated_at = datetime.utcnow()
            activity.session_start = datetime.utcnow()
            activity.last_heartbeat = datetime.utcnow()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≥–µ–Ω—Ç–∞
            agent.last_activated = datetime.utcnow()
            agent.usage_count += 1
            
            session.commit()
        
        logger.info(f"‚úÖ –ê–≥–µ–Ω—Ç '{agent_name}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        return f"üöÄ –ê–≥–µ–Ω—Ç '{agent_name}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\nüìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {agent.specialization}\nüéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {agent.purpose}\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}"
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ '{agent_name}': {str(e)}"
        logger.error(error_msg)
        return error_msg

def deactivate_agent(agent_name: str) -> str:
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.
    
    –ü—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏:
    - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–±–æ—Ç—ã
    - –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    - –ê–≥–µ–Ω—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    
    Args:
        agent_name: –ò–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        
    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    """
    try:
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–∞
            activity = session.query(AgentActivity).filter_by(agent_name=agent_name).first()
            if not activity:
                return f"‚ùå –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–∞ '{agent_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
            
            if activity.current_status != "active":
                return f"‚ùå –ê–≥–µ–Ω—Ç '{agent_name}' —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω (—Å—Ç–∞—Ç—É—Å: {activity.current_status})"
            
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
            activity.current_status = "inactive"
            activity.deactivated_at = datetime.utcnow()
            activity.current_user_id = None
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Å—Å–∏–∏
            if activity.session_start:
                session_duration = datetime.utcnow() - activity.session_start
                logger.info(f"–°–µ—Å—Å–∏—è –∞–≥–µ–Ω—Ç–∞ '{agent_name}' –¥–ª–∏–ª–∞—Å—å: {session_duration}")
            
            session.commit()
        
        logger.info(f"‚úÖ –ê–≥–µ–Ω—Ç '{agent_name}' –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        return f"‚è∏Ô∏è –ê–≥–µ–Ω—Ç '{agent_name}' –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n\nüìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {activity.messages_processed}\nüî¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {activity.tokens_used}"
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞ '{agent_name}': {str(e)}"
        logger.error(error_msg)
        return error_msg

def list_active_agents() -> str:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    Returns:
        str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–≥–µ–Ω—Ç–æ–≤ —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
        active_agents = get_all_active_agents()
        
        if not active_agents:
            return "üìã –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
        result = "üìã **–ê–∫—Ç–∏–≤–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:**\n\n"
        
        for agent in active_agents:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            with SessionLocal() as session:
                activity = session.query(AgentActivity).filter_by(agent_name=agent.name).first()
                status = activity.current_status if activity else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                user_id = activity.current_user_id if activity else "–Ω–µ—Ç"
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ –∞–≥–µ–Ω—Ç–∞
            if agent.is_main_agent:
                emoji = "üëë"  # –ì–ª–∞–≤–Ω—ã–π –∞–≥–µ–Ω—Ç
            elif agent.specialization and "–∞–Ω–∞–ª–∏–∑" in agent.specialization.lower():
                emoji = "üìä"  # –ê–Ω–∞–ª–∏—Ç–∏–∫
            elif agent.specialization and "–∫—Ä–µ–∞—Ç–∏–≤" in agent.specialization.lower():
                emoji = "üé®"  # –ö—Ä–µ–∞—Ç–∏–≤—â–∏–∫
            else:
                emoji = "ü§ñ"  # –û–±—ã—á–Ω—ã–π –∞–≥–µ–Ω—Ç
            
            result += f"{emoji} **{agent.name}**\n"
            result += f"   üìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {agent.specialization or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
            result += f"   üîí –ü—Ä–∞–≤–∞: {agent.access_level}\n"
            result += f"   üìä –°—Ç–∞—Ç—É—Å: {status}\n"
            result += f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id or '–Ω–µ—Ç'}\n"
            result += f"   üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {agent.usage_count}\n\n"
        
        return result
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤: {str(e)}"
        logger.error(error_msg)
        return error_msg

def get_agent_status(agent_name: str) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.
    
    Args:
        agent_name: –ò–º—è –∞–≥–µ–Ω—Ç–∞
        
    Returns:
        str: –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≥–µ–Ω—Ç–∞
        agent = get_agent_profile_by_name(agent_name)
        if not agent:
            return f"‚ùå –ê–≥–µ–Ω—Ç '{agent_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–∞
            activity = session.query(AgentActivity).filter_by(agent_name=agent_name).first()
            
            result = f"üìä **–°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞ '{agent_name}'**\n\n"
            result += f"üìã **–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            result += f"   üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {agent.specialization or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
            result += f"   üîí –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: {agent.access_level}\n"
            result += f"   üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ñ–∏–ª—è: {agent.status}\n"
            result += f"   üëë –ì–ª–∞–≤–Ω—ã–π –∞–≥–µ–Ω—Ç: {'–î–∞' if agent.is_main_agent else '–ù–µ—Ç'}\n"
            result += f"   üìÖ –°–æ–∑–¥–∞–Ω: {agent.created_at.strftime('%Y-%m-%d %H:%M')}\n"
            result += f"   üìà –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {agent.usage_count}\n"
            result += f"   üî¢ –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤: {agent.total_tokens_used}\n\n"
            
            if activity:
                result += f"üìä **–¢–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**\n"
                result += f"   üìä –°—Ç–∞—Ç—É—Å: {activity.current_status}\n"
                result += f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {activity.current_user_id or '–Ω–µ—Ç'}\n"
                result += f"   üöÄ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: {activity.activated_at.strftime('%Y-%m-%d %H:%M') if activity.activated_at else '–Ω–µ—Ç'}\n"
                result += f"   üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {activity.messages_processed}\n"
                result += f"   üî¢ –¢–æ–∫–µ–Ω–æ–≤ –≤ —Å–µ—Å—Å–∏–∏: {activity.tokens_used}\n"
                result += f"   ‚ùå –û—à–∏–±–æ–∫: {activity.error_count}\n"
                
                if activity.last_error:
                    result += f"   ‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {activity.last_error}\n"
            else:
                result += f"üìä **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:** –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
            
            result += f"\nüé≠ **–õ–∏—á–Ω–æ—Å—Ç—å:**\n"
            result += f"   üé® –¢–æ–Ω: {agent.tone}\n"
            result += f"   üí¨ –°—Ç–∏–ª—å: {agent.communication_style or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            result += f"   üî¢ –ú–∞–∫—Å. —Ç–æ–∫–µ–Ω–æ–≤: {agent.max_tokens}\n"
            result += f"   üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {agent.temperature}\n"
            
            return result
            
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–∞ '{agent_name}': {str(e)}"
        logger.error(error_msg)
        return error_msg

def monitor_agent_activity() -> str:
    """
    –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ.
    
    Returns:
        str: –û—Ç—á–µ—Ç –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤
    """
    try:
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            activities = session.query(AgentActivity).all()
            
            if not activities:
                return "üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤"
            
            result = "üìä **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–æ–≤**\n\n"
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
            status_counts = {}
            for activity in activities:
                status = activity.current_status
                status_counts[status] = status_counts.get(status, 0) + 1
            
            result += f"üìà **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:**\n"
            for status, count in status_counts.items():
                emoji = {
                    "active": "üü¢",
                    "inactive": "‚ö™",
                    "busy": "üü°",
                    "error": "üî¥"
                }.get(status, "‚ùì")
                result += f"   {emoji} {status}: {count}\n"
            
            result += f"\nüìã **–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            
            for activity in activities:
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∞–≥–µ–Ω—Ç–∞
                agent = session.query(AgentProfile).filter_by(name=activity.agent_name).first()
                if not agent:
                    continue
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
                status_emoji = {
                    "active": "üü¢",
                    "inactive": "‚ö™",
                    "busy": "üü°",
                    "error": "üî¥"
                }.get(activity.current_status, "‚ùì")
                
                result += f"\n{status_emoji} **{activity.agent_name}**\n"
                result += f"   üìä –°—Ç–∞—Ç—É—Å: {activity.current_status}\n"
                result += f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {activity.current_user_id or '–Ω–µ—Ç'}\n"
                result += f"   üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {activity.messages_processed}\n"
                result += f"   üî¢ –¢–æ–∫–µ–Ω–æ–≤: {activity.tokens_used}\n"
                result += f"   ‚ùå –û—à–∏–±–æ–∫: {activity.error_count}\n"
                
                if activity.last_heartbeat:
                    time_diff = datetime.utcnow() - activity.last_heartbeat
                    result += f"   ‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª: {time_diff.total_seconds():.0f} —Å–µ–∫ –Ω–∞–∑–∞–¥\n"
            
            return result
            
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {str(e)}"
        logger.error(error_msg)
        return error_msg

def create_agent_from_template(template_name: str, new_name: str, customization: str = "") -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞.
    
    Args:
        template_name: –ò–º—è —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        new_name: –ù–æ–≤–æ–µ –∏–º—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞
        customization: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        
    Returns:
        str: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω
        template = get_agent_profile_by_name(template_name)
        if not template:
            return f"‚ùå –®–∞–±–ª–æ–Ω '{template_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        
        if not template.is_template:
            return f"‚ùå '{template_name}' –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —à–∞–±–ª–æ–Ω–æ–º!"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∞–≥–µ–Ω—Ç —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
        existing_agent = get_agent_profile_by_name(new_name)
        if existing_agent:
            return f"‚ùå –ê–≥–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º '{new_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞
        new_agent = AgentProfile(
            name=new_name,
            created_by="–ò—Ä–∏—Å–∫–∞",
            status="active",
            access_level=template.access_level,
            is_main_agent=False,
            specialization=template.specialization,
            purpose=template.purpose,
            system_prompt=template.system_prompt,
            personality_traits=template.personality_traits,
            tone=template.tone,
            communication_style=template.communication_style,
            safety_rules=template.safety_rules,
            allowed_tools=template.allowed_tools,
            restricted_actions=template.restricted_actions,
            generation_settings=template.generation_settings,
            max_tokens=template.max_tokens,
            temperature=template.temperature,
            version="1.0.0",
            is_template=False,
            tags=template.tags,
            description=f"–°–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ '{template_name}'",
            notes=f"–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è: {customization}" if customization else f"–°–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ '{template_name}'"
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        with SessionLocal() as session:
            session.add(new_agent)
            session.commit()
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            activity = AgentActivity(
                agent_name=new_name,
                current_status="inactive",
                last_heartbeat=datetime.utcnow()
            )
            session.add(activity)
            session.commit()
        
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –∞–≥–µ–Ω—Ç '{new_name}' –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ '{template_name}'")
        return f"üéâ –ê–≥–µ–Ω—Ç '{new_name}' —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ '{template_name}'!\n\nüìã –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {template.specialization}\nüéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {template.purpose}\nüîí –ü—Ä–∞–≤–∞: {template.access_level}\nüìä –°—Ç–∞—Ç—É—Å: –∞–∫—Ç–∏–≤–µ–Ω"
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞: {str(e)}"
        logger.error(error_msg)
        return error_msg

# ============================================================================
# –°–ü–ò–°–û–ö –í–°–ï–• TOOLS –î–õ–Ø –ò–†–ò–°–ö–ò
# ============================================================================

AGENT_MANAGEMENT_TOOLS = {
    "create_agent_profile": {
        "function": create_agent_profile,
        "description": "–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞",
        "parameters": {
            "name": "–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∞–≥–µ–Ω—Ç–∞",
            "specialization": "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –∫—Ä–µ–∞—Ç–∏–≤, –ø–æ–º–æ—â—å)",
            "purpose": "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è",
            "system_prompt": "–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è LLM",
            "personality_traits": "–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ (—Å–ø–∏—Å–æ–∫)",
            "tone": "–¢–æ–Ω –æ–±—â–µ–Ω–∏—è (friendly, professional, creative)",
            "communication_style": "–°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è",
            "safety_rules": "–ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            "allowed_tools": "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ tools (—Å–ø–∏—Å–æ–∫)",
            "restricted_actions": "–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",
            "max_tokens": "–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤",
            "temperature": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å)",
            "tags": "–¢–µ–≥–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏",
            "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞",
            "notes": "–ó–∞–º–µ—Ç–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
        }
    },
    "activate_agent": {
        "function": activate_agent,
        "description": "–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
        "parameters": {
            "agent_name": "–ò–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏",
            "user_id": "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        }
    },
    "deactivate_agent": {
        "function": deactivate_agent,
        "description": "–î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞",
        "parameters": {
            "agent_name": "–ò–º—è –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏"
        }
    },
    "list_active_agents": {
        "function": list_active_agents,
        "description": "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ",
        "parameters": {}
    },
    "get_agent_status": {
        "function": get_agent_status,
        "description": "–ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞",
        "parameters": {
            "agent_name": "–ò–º—è –∞–≥–µ–Ω—Ç–∞"
        }
    },
    "monitor_agent_activity": {
        "function": monitor_agent_activity,
        "description": "–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ",
        "parameters": {}
    },
    "create_agent_from_template": {
        "function": create_agent_from_template,
        "description": "–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞",
        "parameters": {
            "template_name": "–ò–º—è —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
            "new_name": "–ù–æ–≤–æ–µ –∏–º—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞",
            "customization": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        }
    }
}

# ============================================================================
# –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° TOOLS
# ============================================================================

def get_tool_by_name(tool_name: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç tool –ø–æ –∏–º–µ–Ω–∏.
    
    Args:
        tool_name: –ò–º—è tool
        
    Returns:
        dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ tool –∏–ª–∏ None
    """
    return AGENT_MANAGEMENT_TOOLS.get(tool_name)

def get_all_tools_info() -> Dict[str, Dict]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö tools.
    
    Returns:
        Dict: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å–µ—Ö tools
    """
    return AGENT_MANAGEMENT_TOOLS

def execute_tool(tool_name: str, **kwargs) -> str:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π tool —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    
    Args:
        tool_name: –ò–º—è tool –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        **kwargs: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è tool
        
    Returns:
        str: –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è tool
    """
    try:
        tool_info = get_tool_by_name(tool_name)
        if not tool_info:
            return f"‚ùå Tool '{tool_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º tool
        result = tool_info["function"](**kwargs)
        return result
        
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è tool '{tool_name}': {str(e)}"
        logger.error(error_msg)
        return error_msg

# ============================================================================
# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TOOLS
# ============================================================================

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ tools —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏...")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞
    print("\n1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞:")
    result = create_agent_profile(
        name="TestAnalyst",
        specialization="–¢–µ—Å—Ç–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
        purpose="–¢–µ—Å—Ç–æ–≤—ã–π –∞–≥–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
        system_prompt="–¢—ã —Ç–µ—Å—Ç–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫",
        personality_traits=["—Ç–µ—Å—Ç–æ–≤—ã–π", "–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π"],
        allowed_tools=["test_tool"]
    )
    print(result)
    
    # –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤
    print("\n2. –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤:")
    result = list_active_agents()
    print(result)
    
    # –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–∞
    print("\n3. –¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–∞:")
    result = get_agent_status("TestAnalyst")
    print(result)
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
