"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–≥–µ–Ω—Ç–∞ –ò—Ä–∏—Å–∫–∞.
–¢–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤.
"""

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ë–î
from agent.models import init_db, init_iriska_profile, create_default_agent_templates

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
from routes import include_routers

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ============================================================================
# –°–û–ó–î–ê–ù–ò–ï FASTAPI –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================================================

app = FastAPI(
    title="–ò—Ä–∏—Å–∫–∞ AI Agent API",
    description="API –¥–ª—è AI –∞–≥–µ–Ω—Ç–∞ –ò—Ä–∏—Å–∫–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc"
)

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê CORS
# ============================================================================

app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:3000",      # Frontend –ø–æ—Ä—Ç
        "http://127.0.0.1:3000",     # Frontend –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π
        "http://frontend:80"          # Docker network
    ],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ============================================================================
# –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –†–û–£–¢–ï–†–û–í
# ============================================================================

include_routers(app)

# ============================================================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –°–¢–ê–†–¢–ï
# ============================================================================

@app.on_event("startup")
async def startup_event():
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª–∏ –∞–≥–µ–Ω—Ç–æ–≤.
    """
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ API –ò—Ä–∏—Å–∫–∏...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if init_db():
            logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ò—Ä–∏—Å–∫–∏
            if init_iriska_profile():
                logger.info("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ò—Ä–∏—Å–∫–∏ —Å–æ–∑–¥–∞–Ω")
            else:
                logger.warning("‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ò—Ä–∏—Å–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã –∞–≥–µ–Ω—Ç–æ–≤
            if create_default_agent_templates():
                logger.info("‚úÖ –®–∞–±–ª–æ–Ω—ã –∞–≥–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã")
            else:
                logger.warning("‚ö†Ô∏è –®–∞–±–ª–æ–Ω—ã –∞–≥–µ–Ω—Ç–æ–≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            
        logger.info("üéâ API –ò—Ä–∏—Å–∫–∏ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise

# ============================================================================
# –ö–û–†–ù–ï–í–û–ô ENDPOINT
# ============================================================================

@app.get("/")
async def root():
    """
    –ö–æ—Ä–Ω–µ–≤–æ–π endpoint - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ.
    """
    return {
        "message": "üöÄ –ò—Ä–∏—Å–∫–∞ AI Agent API",
        "version": "1.0.0",
        "status": "running",
        "description": "AI –∞–≥–µ–Ω—Ç –ò—Ä–∏—Å–∫–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤"
    }

# ============================================================================
# –í–°–ï ENDPOINTS –ü–ï–†–ï–ú–ï–©–ï–ù–´ –í –û–¢–î–ï–õ–¨–ù–´–ï –ú–û–î–£–õ–ò –í –ü–ê–ü–ö–ï routes/
# ============================================================================

# –í—Å–µ endpoints –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏ –≤ –ø–∞–ø–∫–µ routes/

# ============================================================================
# –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================================================

if __name__ == "__main__":
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    import os
    host = os.getenv("HOST", "0.0.0.0")
    port = int(os.getenv("PORT", "8000"))
    reload = os.getenv("RELOAD", "false").lower() == "true"
    
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {host}:{port}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º uvicorn —Å–µ—Ä–≤–µ—Ä
    uvicorn.run(
        "main:app",
        host=host,
        port=port,
        reload=reload,
        log_level="info"
    ) 